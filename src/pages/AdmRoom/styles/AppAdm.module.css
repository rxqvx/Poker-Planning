
#root {
  /* vh = view height */
  height: 100vh;
}

.body {
  text-align: center;
  padding: 0px;
  margin: 0px;
  box-sizing: content-box;
}


.divUsersCards{
  display:flex;
  justify-content: space-between;
  padding: 2% 10%;
}

.divCards{
  display:flex;
  justify-content: space-between;
  padding: 3% 8%;
}
.baloonRow {
  padding: 0px 150px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.baloon {
  margin-top: 40px;
  padding-left: 70px;
  display: flex;
  justify-content: flex-start;
  background: rgb(65,87,142);
  background: linear-gradient(90deg, rgba(65,87,142,1) 0%, rgb(212, 0, 255) 100%);
  color: rgb(255, 255, 255);
  margin-bottom: 1rem; 
  border-radius: 10px 90px;
  flex: 1;
  max-width: 700px;
  text-overflow: ellipsis;
  overflow: hidden;
}


.rodapeRoom {
  width:100%;
  padding:1% 1%;
  /* background-image: linear-gradient(to right, rgb(149, 179, 255), rgba(	189, 143, 255 ,1)); */
  background: rgb(65,87,142);
  background: linear-gradient(90deg, rgba(65,87,142,1) 0%, rgb(212, 0, 255) 100%);
}
.headerRoom{
  width:100%;
  padding:1% 1%;
  text-align: center;
  /* background-image: linear-gradient(to right, rgb(149, 179, 255), rgba(	189, 143, 255 ,1)); */
  background: rgb(65,87,142);
  background: linear-gradient(90deg, rgba(65,87,142,1) 0%, rgb(212, 0, 255) 100%);
}
.rodapeRoomfixed{
  width:100%;
  padding:1% 1%;
  /* background-image: linear-gradient(to right, rgb(149, 179, 255), rgba(	189, 143, 255 ,1)); */
  background: rgb(65,87,142);
  background: linear-gradient(90deg, rgba(65,87,142,1) 0%, rgb(212, 0, 255) 100%);
  position: absolute;
  bottom: -1;
  left: 0;
  height: 50px;
}

/* ------acho que a partir daqui que começa a edicao das carta/------ */
.containerRoom{
  display:flex;
  justify-content: center;
  align-items: center;
}

/* tirar as check box */
.input-hidden{
  display:none;
}

.input-hidden:checked{
  border-color: #BD8FFF;
} 

.h2Room{
  color: #fff;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* USER CARD */
.userCardVote{
  width: 110px;
  height: 130px;
  border: 2px solid white;
  background-color: #aba0bf;
  border-radius: 20px;
  display: inline-block;
  justify-content: center;
  align-items: center;
}

.numberUserCardVote{
  color:white;
  width: 50px;
  height: 50px;
  /* Centralizar na vertical e na horizontal */
  position: absolute;
  top: 50%;
  left: 50%;
  margin: -12px 0 0 -20px;
}
.userCardDiv{
  /* width: 20%; */
  /* height: 25%; */
  text-align: center;
  /* position relative para centralizar o votevalue */
  position: relative;
  /* display:flex;
  justify-content: center;
  align-items: center; */
  padding: 2px 100px;
}
.titleUserCard{
  /* display:block; */
  margin-left: 60px;
  background: rgb(118,128,153);
  background: linear-gradient(90deg, rgba(118,128,153,1) 0%, rgba(243,184,255,1) 100%);
  border-radius: 10px;
  padding: 2px 2px;
  width: 180px;
  color:white;
  text-shadow: 0 0 5px #000;
  box-shadow: 0 0 1em rgba(46, 46, 46, 0.2);
  text-overflow: ellipsis;
  overflow: hidden;
}
.sectionUserCards{
  position: relative;
  /* quebrar linha das cartas abaixo */
  flex-wrap: wrap;
  display: flex;
  justify-content: space-around;
  /* align-items: flex-start; */

}
/* arrumar a posicaodos elemento, se nao vai imprimium em baixo do outro */
.front, .back{
	position: absolute;
	width: 100%;
	height: 100%;
  backface-visibility: hidden;
}
/* pra realmente aparecer as duas imagens, se não só apareceria o front frente e tras */
.back{
	transform: rotateY(180deg);
}

.cardfront{
  background-color: #aba0bf;
  opacity: 1;
  border-radius: 10px;
  border: solid #fff;
  background: repeating-linear-gradient( 45deg, #dac0ff, #dac0ff 5px, #aba0bf 5px, #aba0bf 25px );
}

.cardback{
  background-color: #cca7ff;
  border-radius: .5rem;
  cursor: pointer;
  border: .2rem solid #f6f0ff;
  border-radius: 10px;
  transition: 200ms ease-in-out transform;

}

/* css da bola do número(do arco, argola) */
.imgback{
  position: relative;
  /* display:flex; */
  /* justify-content: center;
  align-items: center; */
  width: 85px;
  height: 110px;
  border: .2rem solid #f6f0ff;
  border-radius: 50%;
  box-shadow: 0 0 .5rem rgba(0,0,0, .4);
  /* overflow: hidden; */
}

/* so criei o img front para tirar o arco central, se não eu usava o img mesmo */
.imgfront{
  width: 85px;
  height: 110px;
  /* box-shadow: 0 0 .5rem rgba(0,0,0, .4); */
  /* overflow: hidden; */
}

.cssflip{
  display:flex;
  justify-content: center;
  margin: 20px 0;
}

.btn-admin {
  margin: 10px;
}

.admchild{
  color: white;
  text-align: center;
  background-color: rgb(112, 112, 112);
  border-radius: 10px;
  width: 10%;
}
.admcontrol{
  display: flex;
  justify-content: center;
  align-items: center;
}

/* -----botao do dark e light mode----- */
#toggle{
  display:none;
}

.button{
  display:inline-block;
  width:85px;
  height: 35px;
  background-color: #fff;
  border-radius: 30px;
  position: relative;
  cursor: pointer;
}

.button::after{
  content: url('../images/sol.svg');
  width: 35px;
  height: 35px;
  background-color: rgb(212, 0, 255);
  border: 2px solid #fff;  
  border-radius: 50%;
  box-shadow: 0 0 5px rgba(0, 0, 0 0.25);
  position: relative;
  display: grid;
  place-content: center;
  line-height: 0;
  transition: background-color 1s, transform 1s ease-in;
}

#toggle:checked + .button::after{
  content: url('../images/lua.svg');
  background-color: rgba(65,87,142,1);
  transform: translateX(50px) rotate(360deg);
}

.BackCard{
  width: 110px;
  height: 130px;
  border: 2px solid hsl(266, 100%, 90%);
  border-radius: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #B094FF;
  background: repeating-linear-gradient( 45deg, #F0A6FF, #F0A6FF 5px, #B094FF 5px, #B094FF 25px );
}

.adminControls{
  padding: 1em;
  text-align: center;
}
.titleAdminControl{
  background: #502057;
  color:white;
  border-radius: 10px;
  text-align: center;
  width: 10%;
}

.titleAdminPai{
  display: flex;
  justify-content: center;
  align-items: center;
}

.buttonsFather{
  display: flex;
  justify-content: center;
  
}
.displayButtons{
  background-color: rgb(65, 68, 250);
  color: #fff;
  border: none;
  border-radius: 10px;
  padding: 10px 20px;
  margin: 10px 50px 20px;

}

.displayButtons:hover{
  background-color: rgb(103, 105, 231);
  transform: scale(1.08);
  box-shadow: 0px 0px 8px 2px rgba(0,0,0,0.5);
}

.displayButtons:active{
  background-color: rgb(0, 2, 94);
  transform: scale(1.05);
  box-shadow: 0px 0px 8px 2px rgba(0,0,0,0.5);

}


/* -------------------parte do flip card-------------- */

/* abaixo meio que é criado um conteiner de um cubo 3d, width e height definem o tamanho e perspective a profundidade */
.espaco3d{
  /* text-align: center; */
  width: 300px;
  height: 200px;
  perspective: 1000px;
  display: inline;

}


.flipper{
  /* posicao relative para as cartas filhos(verso-carta e frente-carta) respeitarem o pai(flipper) */
  position: relative;
  /* Vamos definir sua largura e altura como 100%. 
Assim ele ficará com o mesmo tamanho do seu container. 
Para que ele mantenha a profundidade que definimos em seu elemento pai (espaco-3d) quando formos girá-lo, passamos o valor preserve-3d à propriedade transform-style.
*/
  width: 100%;
	height: 100%;
	transform-style: preserve-3d;
  /* para que não gire instantaneamente essa transition 0.8s irá fazer o movimento de rotacionar */
  transition: transform 0.8s;

}

.versoCarta, .frenteCarta{
  /* agora os dois estão na mesma posicao dentro de flipper com absolute */
  position: absolute;
	width: 100%;
	height: 100%;
  backface-visibility: hidden;
}

/* sempre que girar iria aparecer a mesma imagem por estarem no mesmo lugar, com isso aqui deixamos a parte da frente da carta de costas pra nos para que isso funcione precisamos do backface-visibility: hidden nas duas cartas inserido acima*/
.frenteCarta{
	transform: rotateY(180deg);
}

/* toda vez que passarmos o mouse em cima do espaco 3d o flipper(que são o que vão girar, ou seja as cartas) irá rotacionar horizontalmente */
/* .espaco-3d:hover .flipper{
	transform: rotateY(180deg);
} */

/* apresentara o numero escolhido */
.flipperOpen {
  transform: rotateY(180deg);
}
/* apresentara o verso da carta, parte de tras */
.flipperClosed {
  transform: rotateY(0deg);
}